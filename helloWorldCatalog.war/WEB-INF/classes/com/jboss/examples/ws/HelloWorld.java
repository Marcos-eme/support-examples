/*
 * To the extent possible under law, Red Hat, Inc. has dedicated all copyright
 * to this software to the public domain worldwide, pursuant to the CC0 Public
 * Domain Dedication. This software is distributed without any warranty.  
 * See <http://creativecommons.org/publicdomain/zero/1.0/>.
 */

package com.jboss.examples.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.6-patch-01
 * Thu Jun 23 10:59:01 CDT 2011
 * Generated source version: 2.2.6-patch-01
 * 
 */


@WebServiceClient(name = "HelloWorld", 
                  wsdlLocation = "file:/Users/klape/support/helloWorld.war/WEB-INF/classes/output/HelloWorld.wsdl",
                  targetNamespace = "http://ws.examples.jboss.com/") 
public class HelloWorld extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://ws.examples.jboss.com/", "HelloWorld");
    public final static QName HelloWorldPort = new QName("http://ws.examples.jboss.com/", "HelloWorldPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/klape/support/helloWorld.war/WEB-INF/classes/output/HelloWorld.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/klape/support/helloWorld.war/WEB-INF/classes/output/HelloWorld.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public HelloWorld(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloWorld(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloWorld() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns HelloWorldPortType
     */
    @WebEndpoint(name = "HelloWorldPort")
    public HelloWorldPortType getHelloWorldPort() {
        return super.getPort(HelloWorldPort, HelloWorldPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWorldPortType
     */
    @WebEndpoint(name = "HelloWorldPort")
    public HelloWorldPortType getHelloWorldPort(WebServiceFeature... features) {
        return super.getPort(HelloWorldPort, HelloWorldPortType.class, features);
    }

}
